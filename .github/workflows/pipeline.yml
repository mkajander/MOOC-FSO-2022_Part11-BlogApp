name: Deployment pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    types: [opened, synchronize]

jobs:
  deployment_pipeline:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2

      - name: Install dependencies
        run: npm install

      - name: eslint
        run: npm run lint

      - name: prettier for all files not ignored
        run: npm run format

      - name: test backend -- if these fail testing front is pointless
        run: npm run test
        env:
          NODE_ENV: test
          TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
          SECRET: ${{ secrets.JWT_SECRET }}

      - name: test frontend
        run: npm run test:client

      - name: build
        run: npm run build

      - name: e2e tests # test everything else first since these are long running
        uses: cypress-io/github-action@v4
        env:
            TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
            SECRET: ${{ secrets.JWT_SECRET }}
        with:
            command: npm run test:e2e
            start: npm run start:test
            wait-on: http://localhost:3003

      - name: Deploy to heroku
        if: ${{ github.event_name == 'push' && !contains( join(toJson(github.event.commits.*.message)), '#skip') }}
        uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          healthcheck: ${{ secrets.HEROKU_HEALTHCHECK }}
          checkstring: "ok"
          rollbackonhealthcheckfailed: true
        env:
          HD_MONGODB_URI: ${{ secrets.MONGODB_URI }}
          HD_NODE_ENV: production
          HD_SECRET: ${{ secrets.JWT_SECRET }}

  tag_release:
    needs: [simple_deployment_pipeline]
    if: ${{ github.event_name == 'push' && !contains( join(toJson(github.event.commits.*.message)), '#skip')}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch

  discord_notification:
    needs: [simple_deployment_pipeline, tag_release]
    runs-on: ubuntu-latest
    steps:
      - name: Deployment success notification
        uses: rjstone/discord-webhook-notify@v1
        if: success() && github.event_name == 'push'
        with:
          severity: info
          color: "#78cc27"
          text: Blog app deployment successful
          avatarUrl: https://avatars.githubusercontent.com/u/34684415?v=4
          description: to https://mibkr-blog-app.herokuapp.com/ by ${{ github.event.pusher.name }}
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Deployment failed notification
        uses: rjstone/discord-webhook-notify@v1
        if: failure() && github.event_name == 'push'
        with:
          severity: error
          color: "#ff0000"
          avatarUrl: https://avatars.githubusercontent.com/u/34684415?v=4
          description: commit ${{ github.event.head_commit.url }} by ${{ github.event.head_commit.author.username }} broke the build as usual :(
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}